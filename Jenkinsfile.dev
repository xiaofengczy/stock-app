pipeline {
    agent any

    environment {
        name = "stock-app"
        directory = "/opt/${name}"
        archive = "${name}.tar.gz"
        target = "${name}-${env.BUILD_ID}"
    }

    tools {
        nodejs 'NodeJS 12.16.3'
    }

    stages {
        stage('Unit Test') {
            failFast true

            parallel {
                stage('Unit Test 1') {
                    steps {
                        echo 'Testing ...'
                    }
                }

                stage('Unit Test 2') {
                    steps {
                        echo 'Testing ...'
                    }
                }
            }
        }


        stage('Prepare Environments') {
            steps {
                withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'server_key', keyFileVariable: 'keyfile')]) {
                    sh "ssh -i '${keyfile}' root@148.70.30.245 'cat /etc/centos-release && mkdir -p ${env.directory}'"
                }
            }
        }

        stage('Build') {
            steps {
                echo 'Building ...'
                sh 'rm -rf ./dist'
                sh 'npm config set registry https://registry.npm.taobao.org'
                sh 'npm install'
                sh 'yarn build'
                sh "cd dist/ && tar -zcf ../${env.archive} ."
                echo 'Build success'
            }
        }

        stage('Print Environments') {
            steps {
                sh 'printenv'
                sh 'ls -al'
            }
        }

        stage('SSH Upload Archive') {
            steps {
                withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'server_key', keyFileVariable: 'keyfile')]) {
                    sh "scp -i '${keyfile}' ./${env.archive} root@192.168.1.231:${env.directory}/${env.target}.tar.gz"
                    sh "ssh -i '${keyfile}' root@148.70.30.245 'cd ${env.directory} && mkdir -p ${env.target} &&  tar -zxvf ${env.target}.tar.gz -C ${env.target} && rm -fr ${env.target}.tar.gz && chown www:www -R ./${env.target}'"
                }
            }
        }

        stage('Deploy') {
            steps {
                withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'server_key', keyFileVariable: 'keyfile')]) {
                    sh "ssh -i '${keyfile}' root@148.70.30.245 'ln -fns ${env.directory}/${env.target} ${env.directory}/latest && echo ${env.target} >> ${env.directory}/builds'"
                }
            }
        }
    }
}
